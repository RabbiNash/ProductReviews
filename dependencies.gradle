ext {

    //Android Properties
    applicationId = 'dev.nashe.productreviews'
    minSdkVersion = 21
    targetSdkVersion = 30
    compileSdkVersion = 30
    kotlinVersion = '1.4.30'
    versionCode = 1
    versionName = "1.0"
    buildTools = "30.0.3"
    googleServices = "4.3.5"

    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

    //Android Libs and Widgets Versions
    appCompatVersion = '1.2.0'
    ktxVersion = '1.3.2'
    constraintLayoutVersion = '2.0.4'
    coroutinesVersion = '1.4.0'
    fragmentVersion = '1.2.5'
    activityVersion = '1.1.0'
    androidXLifecycleVersion = '2.2.0'
    multiDexVersion = '2.0.1'
    navigationVersion = '2.3.2'
    recyclerViewVersion = '1.2.0-alpha02'
    materialDesignVersion = '1.2.1'
    cardViewVersion = '1.0.0'

    //Networking Versions
    retrofitVersion = '2.9.0'
    okHttpVersion = '4.8.1'
    moshiVersion = '1.9.3'

    //Animation
    lottieVersion = '3.6.0'

    //persistence
    room = '2.2.6'

    //workmanager
    work = '2.5.0'

    //Data Versions
    livedataktxVersion = '2.2.0'

    //Logging Versions
    timberVersion = '4.7.1'

    //static analysis
    ktlint = '0.36.0'

    //Injection
    javaxInjectVersion = '1'
    javaxAnnotationVersion = '1.0'
    hiltVersion = '2.35'
    hiltViewModelVersion = '1.0.0-alpha03'
    hiltWork = '1.0.0'

    //glide
    glide = '4.12.0'

    //Testing Version
    jUnitVersion = '4.12'
    androidTestRunnerVersion = '1.3.0-alpha02'
    androidTestRulesVersion = '1.3.0-alpha02'
    jUnitExtVersion = '1.1.2'
    testCoreVersion = '1.2.0'
    espressoVersion = '3.3.0'
    assertJVersion = '3.13.2'
    mockitoKotlinVersion = '2.1.0'
    truthVersion = '1.0.1'
    archTestingVersion = '2.1.0'
    ktxTestingVersion = '1.2.0'
    crashlytics = '2.5.2'
    robolectric = '4.5.1'
    swipeToRefresh = '1.1.0'

    //firebase
    firebase = '27.1.0'

    commonDependencies = [
            ktlint : "com.pinterest:ktlint:${ktlint}"
    ]

    domainDependencies = [
            kotlinCoroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}",
            javaxAnnotation : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject     : "javax.inject:javax.inject:${javaxInjectVersion}",
            kotlin          : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    ]

    domainTestDependencies = [
            junit           : "junit:junit:${jUnitVersion}",
            mockito         : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
            assertj         : "org.assertj:assertj-core:${assertJVersion}",
            kotlinCoroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesVersion}",
            truth           : "com.google.truth:truth:${truthVersion}"
    ]

    dataDependencies = [
            kotlinCoroutines     : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}",
            androidCoroutines    : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}",
            javaxAnnotation      : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject          : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidKtx           : "androidx.core:core-ktx:${ktxVersion}",
            retrofit             : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            gsonConvertorFactory : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            okHttp               : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            gson                 : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            okHttpLogger         : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            roomktx             : "androidx.room:room-ktx:${room}",
            room                 : "androidx.room:room-runtime:${room}",
            roomProcessor        : "androidx.room:room-compiler:${room}"
    ]

    dataTestDependencies = [
            junit              : "junit:junit:${jUnitVersion}",
            mockito            : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
            assertj            : "org.assertj:assertj-core:${assertJVersion}",
            okHttpMockWebServer: "com.squareup.okhttp3:mockwebserver:${okHttpVersion}",
            kotlinCoroutines   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesVersion}",
            androidTestRunner  : "androidx.test:runner:${androidTestRunnerVersion}",
            jUnitExt           : "androidx.test.ext:junit:${jUnitExtVersion}",
            testCore           : "androidx.test:core:${testCoreVersion}",
            androidTestRules   : "androidx.test:rules:${androidTestRulesVersion}",
            truth              : "com.google.truth:truth:${truthVersion}",
            roomTesting        : "androidx.room:room-testing:$room",
            robolectric       : "org.robolectric:robolectric:$robolectric"
    ]

    appDependencies = [
            javaxAnnotation              : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject                  : "javax.inject:javax.inject:${javaxInjectVersion}",
            kotlin                       : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
            androidKtx                   : "androidx.core:core-ktx:${ktxVersion}",
            constraintLayout             : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            appCompat                    : "androidx.appcompat:appcompat:${appCompatVersion}",
            materialDesign               : "com.google.android.material:material:${materialDesignVersion}",
            kotlinCoroutines             : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}",
            androidCoroutines            : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}",
            timber                       : "com.jakewharton.timber:timber:${timberVersion}",
            cardView                     : "androidx.cardview:cardview:${cardViewVersion}",
            lottie                       : "com.airbnb.android:lottie:${lottieVersion}",
            recyclerView                 : "androidx.recyclerview:recyclerview:${recyclerViewVersion}",
            androidxFragment             : "androidx.fragment:fragment:${fragmentVersion}",
            androidxActivity             : "androidx.activity:activity-ktx:${activityVersion}",
            androidxLifecycleExtensions  : "androidx.lifecycle:lifecycle-extensions:${androidXLifecycleVersion}",
            androidxLifecycleViewmodelKtx: "androidx.lifecycle:lifecycle-viewmodel-ktx:${androidXLifecycleVersion}",
            androidLiveDataKtx           : "androidx.lifecycle:lifecycle-livedata-ktx:${livedataktxVersion}",
            multiDex                     : "androidx.multidex:multidex:${multiDexVersion}",
            navigationFragment           : "androidx.navigation:navigation-fragment-ktx:${navigationVersion}",
            navigationUI                 : "androidx.navigation:navigation-ui-ktx:${navigationVersion}",
            hilt                         : "com.google.dagger:hilt-android:${hiltVersion}",
            hiltCompiler                 : "com.google.dagger:hilt-android-compiler:${hiltVersion}",
            hiltViewModel                : "androidx.hilt:hilt-lifecycle-viewmodel:${hiltViewModelVersion}",
            hiltViewModelCompiler        : "androidx.hilt:hilt-compiler:${hiltWork}",
            hiltWorker                   : "androidx.hilt:hilt-work:${hiltWork}",
            roomktx                      : "androidx.room:room-ktx:${room}",
            room                         : "androidx.room:room-runtime:${room}",
            roomProcessor                : "androidx.room:room-compiler:${room}",
            workktx                      : "androidx.work:work-runtime-ktx:$work",
            glide                        : "com.github.bumptech.glide:glide:${glide}",
            glideCompiler                : "com.github.bumptech.glide:compiler:${glide}",
            firebaseBom                  : "com.google.firebase:firebase-bom:${firebase}",
            firebaseCrashlytics          : "com.google.firebase:firebase-crashlytics",
            firebaseAnalytics            : "com.google.firebase:firebase-analytics",
            swipeToRefresh               : "androidx.swiperefreshlayout:swiperefreshlayout:$swipeToRefresh"
    ]

    appTestDependencies = [
            junit            : "junit:junit:${jUnitVersion}",
            mockito          : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
            assertj          : "org.assertj:assertj-core:${assertJVersion}",
            androidTestRunner: "androidx.test:runner:${androidTestRunnerVersion}",
            espresso         : "androidx.test.espresso:espresso-core:${espressoVersion}",
            kotlinCoroutines : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesVersion}",
            jUnitExt         : "androidx.test.ext:junit:${jUnitExtVersion}",
            truth            : "com.google.truth:truth:${truthVersion}",
            arch             : "androidx.arch.core:core-testing:${archTestingVersion}",
            coreKtx          : "androidx.test:core-ktx:${ktxTestingVersion}",
            robolectric       : "org.robolectric:robolectric:$robolectric"

    ]
}